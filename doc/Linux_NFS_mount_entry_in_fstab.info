Linux NFS Mount Entry in fstab ( /etc/fstab ) with Example
-----------------------------------------------------------

Updated January 15, 2020By Bobbin ZachariahFILE SYSTEM, LINUX HOWTO, NFS
NFS stands for ‘Network File System’. This mechanism allows unix machines to share files and directories over the network. Using this feature, a Linux machine can mount a remote directory (residing in a NFS server machine) just like a local directory and can access files from it.

A NFS share can be mounted on a machine by adding a line to the /etc/fstab file.

The default syntax for fstab entry of NFS mounts is as follows.

Server:/path/to/export /local_mountpoint nfs <options> 0 0

Server: This should be replaced with the exact hostname or IP address of the NFS server where the exported directory resides.

/path/to/export: This should be replaced with the exact shared directory (exported folder) path.

/local_mountpoint: This should be replaced with an existing directory in the server where you want to mount the NFS share.

Fstab NFS options
You can specify a number of mount points which you want to set on the NFS mount. We will go through the important mount options which you may consider while mounting a NFS share.

1) Soft/hard
When the mount option ‘hard’ is set, if the NFS server crashes or becomes unresponsive, the NFS requests will be retried indefinitely. You can set the mount option ‘intr’, so that the process can be interrupted. When the NFS server comes back online, the process can be continued from where it was while the server became unresponsive.

When the option ‘soft’ is set, the process will be reported an error when the NFS server is unresponsive after waiting for a period of time (defined by the ‘timeo’ option). In certain cases ‘soft’ option can cause data corruption and loss of data. So, it is recommended to use hard and intr options.

2) timeo=n
This option defines the time (in tenths of a second) the NFS client waits for a response before it retries an NFS request.

3) intr
This allows NFS requests to be interrupted if the server goes down or cannot be reached. Using the intr option is preferred to using the soft option because it is significantly less likely to result in data corruption.

4) rsize=num and wsize=num
This defines the maximum number of bytes in each READ/WRITE request that the NFS client can receive/send when communicating with a NFS server. The rsize/wsize value is a positive integral multiple of 1024. Specified rsize values lower than 1024 are replaced with 4096; values larger than 1048576 are replaced with 1048576. If a specified value is within the supported range but not a multiple of 1024, it is rounded down to the nearest multiple of 1024.

5) retrans=n
The number of times the NFS client retries a request before it attempts further recovery action. If the retrans option is not specified, the NFS client tries each request three times. The NFS client generates a "server not responding" message after retrans retries, then attempts further recovery (depending on whether the hard mount option is in effect).

6) noexec
Prevents execution of binaries on mounted file systems. This is useful if the system is mounting a non-Linux file system via NFS containing incompatible binaries.

7) nosuid
Disables set-user-identifier or set-group-identifier bits. This prevents remote users from gaining higher privileges by running a setuid program.

8) tcp
This specifies the NFS mount to use the TCP protocol.

9) udp
This specifies the NFS mount to use the UDP protocol.

Sample NFS fstab entry
A sample fstab entry for NFS share is as follows.

host.myserver.com:/home /mnt/home nfs rw,hard,intr,rsize=8192,wsize=8192,timeo=14 0 0

This will make the export directory “/home” to be available on the NFS client machine. You can mount the NFS share just like you mount a local folder.

mount /mnt/home


------------------------------------------------------------------------------------------------------------------------------------
Read also:
https://linoxide.com/file-system/understanding-each-entry-of-linux-fstab-etcfstab-file/

Fstab File ( /etc/fstab ) Entry Options in Linux
Updated December 16, 2019By Bobbin ZachariahFILE SYSTEM, LINUX HOWTO
￼

The ‘/etc/fstab’ file is one of the important configuration file used by Linux machines which specify the devices and partitions available and where/how to use these partitions. This file will be created/updated during the system installation. You need to modify or maintain it in the way you need to use the devices/partitions.

In Linux each device is available as a directory in ‘/dev’ folder. That is, when you connect a floppy drive or plug in any external device to a Linux machine, it will be showing up in /dev folder. But, you won’t be able to use the device or access contents from it using that device file. You need to mount the device in order to make it available for use. The fstab file allows you to specify how and what options need to be used for mounting a particular device or partition, so that it will be using that options every time you mount it. This file is read each time when the system is booted and the specified filesystem is mounted accordingly. You could also comment out the specified lines and can manually mount filesystem after reboot.

As an example, if your fstab file (/etc/fstab) contains the following entry,

/dev/hdc /cdrom iso9660 rw,noauto,user 0 0

You just need to issue the following command to mount cdrom after inserting a CD into the CD drive.

mount /cdrom

This will mount the CDROM to the folder /cdrom with the options ‘rw, noauto and user’ (we will go through the various options in detail later) and you will be browse the contents of the CD through the directory /cdrom.

fstab Options
Each line in fstab corresponds to a particular device or partitions. A sample entry on fstab file is as follows.

#device mounting_directory filesystem_type options dump fsck
/dev/hdc /cdrom iso9660 rw,noauto,user 0 0

• The first field
corresponds to the device name. If you have plugged in an external device and confused about the device name, you need to use ‘dmesg’ or ‘tail –f /var/log/messages’ to find the device name. For SCSI hard disks, devices will be names like /dev/sda (first drive), /dev/sdb (second drive).

• The second field
mentions the mount point on which the device needs to be mounted. This directory should exist. That is, you need to create th directory before using mount command.

• Third field
is the filesystem type. The various important file system types are,

- ext2 and ext3: Commonly all latest Linux partitions are Ext3. Ext3 is a newer filesystem type that differs from Ext2 in that it's journaled, meaning that if you turn the computer off without properly shutting down, you shouldn't lose any data and your system shouldn't spend ages doing filesystem checks the next time you boot up.

- reiserfs - ReiserFS is a journaled filesystem, but it's much more advanced than Ext3. Many Linux distros (including SuSE) have started using ReiserFS as their default filesystem for Linux partitions.

- Swap- The filesystem type "swap" is used in your swap partitions.

- vfat and ntfs : The USB stick is most likely formatted as Vfat (more widely known as FAT32). The Windows partitions are probably either Vfat or NTFS.

- ISO 9660 – This is a common format that target Compact Discs, DVDs and Blu-ray discs.

- Auto- The option "auto" simply means that the filesystem type is detected automatically. Normally floppy or CDROMs will be given this option as their filesystem type may vary.

• The fourth field
Describes the mount options. There are few number of mount options available. We will go through the important options that a server admin should be aware of.

- auto and noauto : auto specifies that the device/partition should be automatically mounted on boot time and ‘noauto’ specifies that the device should be explicitly mounted. When you execute ‘mount –a’ all partition that has ‘auto’ value set will get mounted automatically. The root partitions should have the ‘auto’ option set so that the partition will get mounted automatically.

- exec and noexec : The option ‘exec’ specifies that the files residing in that device will be able to execute and ‘noexec’ remove the execute feature. The partitions which are intended to keep non executable files like /var or /tmp can have noexec feature enabled for better security.

- user and nouser : The ‘user’ option specifies that the users will be able to mount the partitions and ‘nouser’ specifies that only root user can mount any partitions. The ‘user’ option should be set for devices like ‘floppy or cdrom’ so that the users will be able to mount the device rather than being root.

Example

This will allow user to mount to directory other than root. Make sure you enabled permission on mountpoint directory for the required user before mounting. On a mounted directory even if you set permission it normally don't work.

/source/location /destination/mountpoint ext3 user,defaults 0 2

Other options, here you can explicitly set owner and group name

/source/location /destination/mountpoint ext3 -o uid=linux -o gid=opensource

or

/source/location /destination/mountpoint ext3 uid=linux,gid=opensource

- ro and rw : The option ‘ro’ specifies that the filesystem should be mounted as read-only and the option ‘rw’ enables read-write.

- sync and async – This specifies how the input and output to the filesystem should be done. sync means it should be done synchronously. That is, when you copy a file to the floppy, the changes are physically written to the floppy at the same time you issue the copy command. For ‘async’, the changes will be written only at the time of unmounting the floppy.

- suid / nosuid – The option ‘suid’ permit the operation of suid, and sgid bits and the option ‘nosuid’ block the operation of suid and sgid bits.

- Defaults - The normal default for Ext3 file systems is equivalent to rw,suid,dev,exec,auto,nouser,async(no acl support).

• The fifth field
specifies the option that need to be used by the dump program. If the value is set to 0, then the partition is excluded from taking backup and if the option is a nonzero value, the device will be backed up.

• The sixth field
mentions the fsck option. That is if the value is set to zero, the device or partition will be excluded from fsck check and if it is nonzero the fsck check will be run in the order in which the value is set. The root partition will have this value set to one so that it will be checked first by fsck.

If you face any troubles on mounting a partition, the file /etc/fstab should be checked for any misconfiguration.
------------------------------------------------------------------------------------------------------------------------------------

